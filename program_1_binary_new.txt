/** built in procs */
WriteString 0x8000      [address: 00000000000000001000000000000000]
GetString	0x9000 	    [address: 00000000000000001001000000000000]
NewLine		0x10000     [address: 00000000000000010000000000000000]
/** end built in procs */


/** .DATA */
plain BYTE ?
 	0x1000 	[address: 00000000000000000001000000000000]

code BYTE ?
    0x2000    [address: 00000000000000000010000000000000]

prompt BYTE "Enter a string: ", 0
    0x3000    [address: 00000000000000000011000000000000]

msg BYTE "The encoded string is:", 0
    0x4000    [address: 00000000000000000100000000000000]

buff BYTE ?100
    0x5000    [address: 00000000000000000101000000000000]
/** END .DATA */



/**  ENCODE PROC */
encode proc 	0x6000 [address: 00000000000000000110000000000000]

compare_ge plain, 'a'
010001 001 00000000000000000001000000000000 100 00000000000000000000000001100001

compare_le plain 'x'
010010 011 00000000000000000001000000000000 100 00000000000000000000000001111000

branch_and cond1_true
010100 00000000000000000000000000000101

compare_ge plain, 'A'
010001 001 00000000000000000001000000000000 100 00000000000000000000000001000001

compare_le plain 'X'
010010 001 00000000000000000001000000000000 100 00000000000000000000000001011000

branch_and cond1_true
010100 00000000000000000000000000000010

jumpto else_L
001001 00000000000000000000000000000011

/** cond1_true */
add plain, 2
000000 001 00000000000000000001000000000000 100 00000010

jumpto end_proc
001001 00000000000000000000000000001000

/** cond2_else */
subtract plain, 24
000010 001 00000000000000000001000000000000 100 00011000

/** end_proc */
move plain, code
001000 001 00000000000000000001000000000000 001 00000000000000000010000000000000
move code, RV1
001000 001 00000000000000000010000000000000 000 1000

return
010110

/** END ENCODE PROC */

/** getline Proc */
getline proc 0x7000 [address: 00000000000000000111000000000000]

move 0, GP1
001000 100 00000000 000 0000

/** l */
move [AR3+GP1],[AR1+GP1]
001000 011 [address at AR3+GP1] 011 [address at AR1+GP1]  <!---------

add GP1, 1
000000 000 0000 100 00000001

compare_lt GP1, AR2
010000 000 0000 000 0101

compare_eq 0, [AR3+GP1]
010011 100 00000000 011 [address at [AR3+GP1]]  <!---------

branch e
010101 00000000000000000000000000000010

jumpto l
001001 11111111111111111111111111111011

/** e */
return
010110
/** end getline proc */

/** .run */
move [prompt], AR1
001000 011 00000000000000000011000000000000 000 0100

call WriteString
001010 00000000000000001000000000000000

call GetString
001010 00000000000000001001000000000000

move [buff], AR1
001000 011 00000000000000000101000000000000 000 0100

move 100, AR2
001000 100 01100100 000 0101

move RV1, AR3
001000 000 1000 000 0110

call getline
001010 00000000000000000111000000000000

move 0, GP1
001000 100 00000000 000 0000

move buff[GP1], plain
001000 010 [value of buff[GP1]] 001 00000000000000000001000000000000  <!---------

call encode
001010 00000000000000000110000000000000

move RV1, buff[GP1]
001000 000 1000 010 [value of buff[GP1]]  <!---------

compare_eq 0, buff[GP1]
010011 100 00000000 010 [value of buff[GP1]]  <!---------

branch end_of_loop
010101 00000000000000000000000000000011

add GP1, 1
000000 000 0000 100 00000001

jumpto top_loop
001001 11111111111111111111111111111010

/** end_of_loop */
move [msg], AR1
001000 011 00000000000000000100000000000000 000 0100

call WriteString
001010 00000000000000001000000000000000

move [buff], AR1
001000 011 00000000000000000101000000000000 000 0100

call WriteString
001010 00000000000000001000000000000000

call NewLine
001010 00000000000000010000000000000000